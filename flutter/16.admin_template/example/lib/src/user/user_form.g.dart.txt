// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user_form.dart';

// **************************************************************************
// AgFormGenerator
// **************************************************************************

class _$EditUserForm implements UserForm {
  final User _model;

  _$EditUserForm(User model) : _model = model;

  @override
  User get model => _model;

  @override
  FormField<String> get username {
    return AgTextField(
      labelText: 'Username',
      onSaved: (newValue) {
        model.rebuild((b) => b.username = newValue);
      },
      validator: (value) {
        final validator = NameValidator<User>(propertyResolver: (user) {
          return user.username;
        });
        return validator.validate(model);
      },
    );
  }

  @override
  FormField<String> get email {
    return AgTextField(
      labelText: 'E-mail',
      hintText: 'Your email address',
      onSaved: (newValue) {
        model.rebuild((b) => b.email = newValue);
      },
      validator: (value) {
        final validator = EmailValidator<User>(propertyResolver: (user) {
          return user.email;
        });
        return validator.validate(model);
      },
    );
  }

  @override
  FormField<String> get phone {
    return AgTextField(onSaved: (newValue) {
      model.rebuild((b) => b.phone = newValue);
    });
  }

  @override
  FormField<String> get bio {
    return AgTextField(
      hintText: 'Tell us about yourself'
          ' (e.g., write down what you do or what hobbies you have)',
      helperText: 'Keep it short, this is just a demo.',
      labelText: 'Life story',
      onSaved: (newValue) {
        model.rebuild((b) => b.bio = newValue);
      },
    );
  }

  @override
  FormField<String> get password {
    return AgPasswordField(
      helperText: 'No more than 8 characters.',
      labelText: 'Password',
      onSaved: (newValue) {
        model.rebuild((b) => b.password = newValue);
      },
    );
  }

  @override
  FormField<String> get passwordConfirmation {
    return AgPasswordField(
      labelText: 'Password Confirmation',
      validator: (value) {
        if (model.password == model.passwordConfirmation) return null;
        return 'Password Confirmation does not match';
      },
    );
  }

  @override
  WidgetBuilder get builder {
    return (BuildContext context) {
      return Container(
        alignment: Alignment.topLeft,
        width: 800,
        child: Shortcuts(
          shortcuts: <LogicalKeySet, Intent>{
            // Pressing enter on the field will now move to the next field.
            LogicalKeySet(LogicalKeyboardKey.enter): NextFocusIntent(),
          },
          child: FocusTraversalGroup(
            child: Form(
              child: SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.stretch,
                  children: [
                    username,
                    const SizedBox(height: 24),
                    email,
                    const SizedBox(height: 24),
                    phone,
                    const SizedBox(height: 24),
                    bio,
                    const SizedBox(height: 24),
                    password,
                    const SizedBox(height: 24),
                    passwordConfirmation,
                  ],
                ),
              ),
            ),
          ),
        ),
      );
    };
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,lines_longer_than_80_chars,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new
